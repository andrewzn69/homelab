---
# NFS StorageClass
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nfs-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate
---
# PersistentVolume for Jellyseerr config
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyseerr-config-pv
  namespace: media
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.0.113
    path: /mnt/external/config/jellyseerr/config
  storageClassName: nfs-storage
---
# PersistentVolumeClaim for Jellyseerr config
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyseerr-config-pvc
  namespace: media
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-storage
---
# Jellyseerr Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyseerr
  namespace: media
  labels:
    app: jellyseerr
spec:
  selector:
    matchLabels:
      app: jellyseerr
  replicas: 1
  template:
    metadata:
      labels:
        app: jellyseerr
    spec:
      containers:
      - name: jellyseerr
        image: fallenbagel/jellyseerr:latest
        ports:
        - containerPort: 5055
        volumeMounts:
        - mountPath: /app/config
          name: jellyseerr-config
      volumes:
      - name: jellyseerr-config
        persistentVolumeClaim:  # Corrected key
          claimName: jellyseerr-config-pvc
---
# Jellyseerr Service
apiVersion: v1
kind: Service
metadata:
  name: jellyseerr
  namespace: media
spec:
  selector:
    app: jellyseerr
  ports:
    - protocol: TCP
      port: 5055
      targetPort: 5055
  type: LoadBalancer
---
# Jellyseerr Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyseerr-ingress
  namespace: media
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-cloudflare"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  rules:
  - host: jellyseerr.zemn.xyz
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jellyseerr
            port:
              number: 5055
  tls:
  - hosts:
    - "*.zemn.xyz"
    secretName: zemn-wildcard-tls
